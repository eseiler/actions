# SPDX-FileCopyrightText: 2006-2025, Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2025, Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC-BY-4.0

# libc++ headers
[
  # sed 's@\(.*{ include: \[ \"\)\(<__\w*/\).*\(>\", \"private\",.*\)@\1\@\2\.\*\3@g' /usr/lib/llvm-20/include/c++/v1/libcxx.imp | sort -u | grep "@" | grep -v "@<__fwd/"
  # __thread should only have <thread>
  { include: [ "@<__algorithm/.*>", "private", "<algorithm>", "public" ] },
  { include: [ "@<__atomic/.*>", "private", "<atomic>", "public" ] },
  { include: [ "@<__bit/.*>", "private", "<bit>", "public" ] },
  { include: [ "@<__charconv/.*>", "private", "<charconv>", "public" ] },
  { include: [ "@<__chrono/.*>", "private", "<chrono>", "public" ] },
  { include: [ "@<__compare/.*>", "private", "<compare>", "public" ] },
  { include: [ "@<__concepts/.*>", "private", "<concepts>", "public" ] },
  { include: [ "@<__condition_variable/.*>", "private", "<condition_variable>", "public" ] },
  { include: [ "@<__configuration/.*>", "private", "<version>", "public" ] },
  { include: [ "@<__coroutine/.*>", "private", "<coroutine>", "public" ] },
  { include: [ "@<__cstddef/.*>", "private", "<cstddef>", "public" ] },
  { include: [ "@<__exception/.*>", "private", "<exception>", "public" ] },
  { include: [ "@<__expected/.*>", "private", "<expected>", "public" ] },
  { include: [ "@<__filesystem/.*>", "private", "<filesystem>", "public" ] },
  { include: [ "@<__flat_map/.*>", "private", "<flat_map>", "public" ] },
  { include: [ "@<__format/.*>", "private", "<format>", "public" ] },
  { include: [ "@<__functional/.*>", "private", "<functional>", "public" ] },
  { include: [ "@<__ios/.*>", "private", "<ios>", "public" ] },
  { include: [ "@<__iterator/.*>", "private", "<iterator>", "public" ] },
  { include: [ "@<__locale_dir/.*>", "private", "<locale>", "public" ] },
  { include: [ "@<__math/.*>", "private", "<cmath>", "public" ] },
  { include: [ "@<__mdspan/.*>", "private", "<mdspan>", "public" ] },
  { include: [ "@<__memory/.*>", "private", "<memory>", "public" ] },
  { include: [ "@<__memory_resource/.*>", "private", "<memory_resource>", "public" ] },
  { include: [ "@<__mutex/.*>", "private", "<mutex>", "public" ] },
  { include: [ "@<__new/.*>", "private", "<new>", "public" ] },
  { include: [ "@<__numeric/.*>", "private", "<numeric>", "public" ] },
  { include: [ "@<__ostream/.*>", "private", "<ostream>", "public" ] },
  { include: [ "@<__random/.*>", "private", "<random>", "public" ] },
  { include: [ "@<__ranges/.*>", "private", "<ranges>", "public" ] },
  { include: [ "@<__stop_token/.*>", "private", "<stop_token>", "public" ] },
  { include: [ "@<__string/.*>", "private", "<string>", "public" ] },
  { include: [ "@<__system_error/.*>", "private", "<system_error>", "public" ] },
  { include: [ "@<__thread/.*>", "private", "<thread>", "public" ] },
  { include: [ "@<__tuple/.*>", "private", "<tuple>", "public" ] },
  { include: [ "@<__type_traits/.*>", "private", "<type_traits>", "public" ] },
  { include: [ "@<__utility/.*>", "private", "<utility>", "public" ] },
  { include: [ "@<__variant/.*>", "private", "<variant>", "public" ] },
  { include: [ "@<__vector/.*>", "private", "<vector>", "public" ] },

  # grep "<__fwd/" /usr/lib/llvm-20/include/c++/v1/libcxx.imp
  { include: [ "<__fwd/array.h>", "private", "<array>", "public" ] },
  { include: [ "<__fwd/bit_reference.h>", "private", "<bitset>", "public" ] },
  { include: [ "<__fwd/bit_reference.h>", "private", "<vector>", "public" ] },
  { include: [ "<__fwd/byte.h>", "private", "<cstddef>", "public" ] },
  { include: [ "<__fwd/complex.h>", "private", "<complex>", "public" ] },
  { include: [ "<__fwd/deque.h>", "private", "<deque>", "public" ] },
  { include: [ "<__fwd/format.h>", "private", "<format>", "public" ] },
  { include: [ "<__fwd/fstream.h>", "private", "<iosfwd>", "public" ] },
  { include: [ "<__fwd/functional.h>", "private", "<functional>", "public" ] },
  { include: [ "<__fwd/ios.h>", "private", "<iosfwd>", "public" ] },
  { include: [ "<__fwd/istream.h>", "private", "<iosfwd>", "public" ] },
  { include: [ "<__fwd/mdspan.h>", "private", "<mdspan>", "public" ] },
  { include: [ "<__fwd/memory.h>", "private", "<memory>", "public" ] },
  { include: [ "<__fwd/memory_resource.h>", "private", "<memory_resource>", "public" ] },
  { include: [ "<__fwd/ostream.h>", "private", "<iosfwd>", "public" ] },
  { include: [ "<__fwd/pair.h>", "private", "<utility>", "public" ] },
  { include: [ "<__fwd/queue.h>", "private", "<queue>", "public" ] },
  { include: [ "<__fwd/span.h>", "private", "<span>", "public" ] },
  { include: [ "<__fwd/sstream.h>", "private", "<iosfwd>", "public" ] },
  { include: [ "<__fwd/stack.h>", "private", "<stack>", "public" ] },
  { include: [ "<__fwd/streambuf.h>", "private", "<iosfwd>", "public" ] },
  { include: [ "<__fwd/string.h>", "private", "<string>", "public" ] },
  { include: [ "<__fwd/string_view.h>", "private", "<string_view>", "public" ] },
  { include: [ "<__fwd/subrange.h>", "private", "<ranges>", "public" ] },
  { include: [ "<__fwd/tuple.h>", "private", "<tuple>", "public" ] },
  { include: [ "<__fwd/variant.h>", "private", "<variant>", "public" ] },
  { include: [ "<__fwd/vector.h>", "private", "<vector>", "public" ] },

  # sed 's@\(.*{ include: \[ \"\)\(<__\w*/\).*\(>\", \"private\",.*\)@\1\@\2\.\*\3@g' /usr/lib/llvm-20/include/c++/v1/libcxx.imp | sort -u | grep -v "@"
  { include: [ "<__bit_reference>", "private", "<bitset>", "public" ] },
  { include: [ "<__bit_reference>", "private", "<vector>", "public" ] },
  { include: [ "<__config>", "private", "<version>", "public" ] },
  { include: [ "<__hash_table>", "private", "<unordered_map>", "public" ] },
  { include: [ "<__hash_table>", "private", "<unordered_set>", "public" ] },
  { include: [ "<__locale>", "private", "<locale>", "public" ] },
  { include: [ "<__node_handle>", "private", "<map>", "public" ] },
  { include: [ "<__node_handle>", "private", "<set>", "public" ] },
  { include: [ "<__node_handle>", "private", "<unordered_map>", "public" ] },
  { include: [ "<__node_handle>", "private", "<unordered_set>", "public" ] },
  { include: [ "<__split_buffer>", "private", "<deque>", "public" ] },
  { include: [ "<__split_buffer>", "private", "<vector>", "public" ] },
  { include: [ "<__tree>", "private", "<map>", "public" ] },
  { include: [ "<__tree>", "private", "<set>", "public" ] },

  # manual
  { symbol: [ "std::nullptr_t", "private", "<cstddef>", "public" ] },
  { symbol: [ "std::string", "private", "<string>", "public" ] },
]
