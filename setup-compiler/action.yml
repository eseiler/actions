name: 'Setup Compiler'
description: 'Installs a compiler'
inputs:
  compiler:
    description: "Compiler to install, e.g., gcc-13 or clang-17 or intel-2023.2.1 (intel for latest)"
    required: true
runs:
  using: 'composite'
  steps:
  - name: Setup Package Manager
    uses: seqan/actions/setup-package-manager@main

  - name: Install GCC
    if: contains(inputs.compiler, 'gcc')
    shell: bash
    run: |
      install ${{ inputs.compiler }}
      echo "CC=${{ inputs.compiler }}" >> "$GITHUB_ENV"
      echo "CXX=$(echo ${{ inputs.compiler }} | sed 's/gcc/g++/' | sed 's/clang/clang++/')" >> "$GITHUB_ENV"

  - name: Install Clang
    if: contains(inputs.compiler, 'clang')
    shell: bash
    run: |
      install ${{ inputs.compiler }}
      echo "CC=${{ inputs.compiler }}" >> "$GITHUB_ENV"
      echo "CXX=$(echo ${{ inputs.compiler }} | sed 's/clang/clang++/')" >> "$GITHUB_ENV"
      if [ "${RUNNER_OS}" == "Linux" ]; then
        CLANG=${{ inputs.compiler }}
        CLANG_VERSION=${CLANG:6}
        install lld-${CLANG_VERSION} libc++-${CLANG_VERSION}-dev libc++abi-${CLANG_VERSION}-dev
        sudo ln -fs /usr/bin/llvm-as-${CLANG_VERSION} /usr/bin/as
        sudo ln -fs /usr/bin/llvm-ar-${CLANG_VERSION} /usr/bin/ar
        sudo ln -fs /usr/bin/ld.lld-${CLANG_VERSION} /usr/bin/ld
        sudo ln -fs /usr/bin/llvm-nm-${CLANG_VERSION} /usr/bin/nm
        sudo ln -fs /usr/bin/llvm-ranlib-${CLANG_VERSION} /usr/bin/ranlib
      fi
      if [ "${RUNNER_OS}" == "macOS" ]; then
        CLANG=${{ inputs.compiler }}
        CLANG_VERSION=${CLANG:6}
        INSTALL_PREFIX=$(brew --prefix llvm@${CLANG_VERSION})
        echo "LDFLAGS=-L${INSTALL_PREFIX}/lib/c++ -Wl,-rpath,${INSTALL_PREFIX}/lib/c++" >> "$GITHUB_ENV"
        sudo ln -fs ${INSTALL_PREFIX}/bin/clang++ ${INSTALL_PREFIX}/bin/clang++-${CLANG_VERSION}
        echo "${INSTALL_PREFIX}/bin" >> "${GITHUB_PATH}"
      fi

  - name: Install Intel
    if: contains(inputs.compiler, 'intel')
    shell: bash
    run: |
      install $(echo ${{ inputs.compiler }} | sed 's/intel/intel-oneapi-compiler-dpcpp-cpp/')
      source /opt/intel/oneapi/setvars.sh
      echo "CC=icx" >> "${GITHUB_ENV}"
      echo "CXX=icpx" >> "${GITHUB_ENV}"
      echo "LIBRARY_PATH=${LIBRARY_PATH}" >> "${GITHUB_ENV}"
      echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}" >> "${GITHUB_ENV}"
      echo "${PATH}" > "${GITHUB_PATH}"

  - name: Export configs
    shell: bash
    run: |
      echo "GNUMAKEFLAGS=--no-print-directory --output-sync=target" >> "$GITHUB_ENV"
